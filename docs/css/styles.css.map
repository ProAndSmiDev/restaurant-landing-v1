{"version":3,"sources":["helpers/animations.scss","main.css","helpers/clear.scss","helpers/funcs.scss"],"names":[],"mappings":"AAAA;EACE;IACE,oDAA4C;YAA5C,4CAA4C;ECC9C;EDEA;IACE,qDAA6C;YAA7C,6CAA6C;ECA/C;EDGA;IACE,kDAA0C;YAA1C,0CAA0C;ECD5C;AACF;;ADVA;EACE;IACE,oDAA4C;YAA5C,4CAA4C;ECC9C;EDEA;IACE,qDAA6C;YAA7C,6CAA6C;ECA/C;EDGA;IACE,kDAA0C;YAA1C,0CAA0C;ECD5C;AACF;;ADIA;EACE,kDAA0C;UAA1C,0CAA0C;ACD5C;;ADAA;EAII,8BAAsB;UAAtB,sBAAsB;ACA1B;;AClBA;EACE,8BAAsB;UAAtB,sBAAsB;EACtB,UAAU;EACV,SAAS;EACT,aAAa;ADqBf;;AClBA;EACE,uBAAuB;ADqBzB;;AClBA;EACE,mBAAc;MAAd,kBAAc;UAAd,cAAc;ADqBhB;;AClBA;EACE,oBCHoD;EDIpD,uBCJoD;AFyBtD;;AClBA;EACE,qBAAqB;EACrB,WAAW;EACX,cAAc;ADqBhB;;AClBA;EACE,WAAW;EACX,YAAY;EACZ,oBAAiB;KAAjB,iBAAiB;ADqBnB;;AClBA;EACE,qBAAqB;EACrB,4CAAoC;EAApC,uCAAoC;EAApC,oCAAoC;ADqBtC;;ACvBA;EAKI,YAAY;ADsBhB;;AClBA;EACE,eAAe;EACf,aAAa;EACb,YAAY;EACZ,6BAA6B;ADqB/B;;ACzBA;EAOI,aAAa;ADsBjB;;AClBA;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,gBAAgB;ADqBlB;;AClBA;EACE,cAAc;EACd,aAAa;ADqBf;;ACvBA;EAKI,YAAY;ADsBhB;;AC3BA;EAKI,YAAY;ADsBhB;;AC3BA;EAKI,YAAY;ADsBhB;;AC3BA;EAKI,YAAY;ADsBhB;;AC3BA;EAKI,YAAY;ADsBhB;;AClBA;EACE,mBAAc;MAAd,kBAAc;UAAd,cAAc;ADqBhB;;AClBA;EACE,wDAAkE;ADqBpE;;ACjBE;EACE,eAAe;EACf,aAAa;EACb,WAAW;ADoBf;;ACjBE;EACE,wBAAgB;EAAhB,gBAAgB;ADoBpB;;AChBA;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,4BAAsB;EAAtB,6BAAsB;MAAtB,0BAAsB;UAAtB,sBAAsB;EACtB,yBAA8B;MAA9B,sBAA8B;UAA9B,8BAA8B;EAC9B,iBAAiB;EACjB,kBAAkB;EAClB,iBAAiB;ADmBnB;;AChBA;EACE,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,4BAAsB;EAAtB,6BAAsB;MAAtB,0BAAsB;UAAtB,sBAAsB;EACtB,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,yBAA8B;MAA9B,sBAA8B;UAA9B,8BAA8B;EAC9B,uBCxFoD;EDyFpD,sBCzFoD;ED0FpD,WAAW;EACX,kBC3FoD;ED4FpD,kBAAkB;EAClB,iBAAiB;ADmBnB;;ACjBE;EACE,8BAAmB;EAAnB,6BAAmB;MAAnB,uBAAmB;UAAnB,mBAAmB;ADoBvB","file":"styles.css","sourcesContent":["@keyframes pulse {\r\n  0% {\r\n    box-shadow: 0 0 0 0 rgba(253, 228, 165, 0.4);\r\n  }\r\n\r\n  70% {\r\n    box-shadow: 0 0 0 10px rgba(223, 228, 165, 0);\r\n  }\r\n\r\n  100% {\r\n    box-shadow: 0 0 0 0 rgba(223, 228, 165, 0);\r\n  }\r\n}\r\n\r\n.pulse {\r\n  animation: pulse 1.5s ease-in-out infinite;\r\n\r\n  &:hover {\r\n    animation-duration: 1s;\r\n  }\r\n}\r\n","@keyframes pulse {\n  0% {\n    box-shadow: 0 0 0 0 rgba(253, 228, 165, 0.4);\n  }\n  70% {\n    box-shadow: 0 0 0 10px rgba(223, 228, 165, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(223, 228, 165, 0);\n  }\n}\n\n.pulse {\n  animation: pulse 1.5s ease-in-out infinite;\n}\n\n.pulse:hover {\n  animation-duration: 1s;\n}\n\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  font: inherit;\n}\n\nhtml {\n  scroll-behavior: smooth;\n}\n\nmain {\n  flex: 1 0 auto;\n}\n\nsection {\n  padding-top: 5.625em;\n  padding-bottom: 5.625em;\n}\n\npicture {\n  display: inline-block;\n  width: 100%;\n  line-height: 0;\n}\n\nimg {\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n}\n\na {\n  text-decoration: none;\n  transition: opacity 0.3s ease-in-out;\n}\n\na:hover {\n  opacity: 0.6;\n}\n\nbutton {\n  cursor: pointer;\n  outline: none;\n  border: none;\n  background-color: transparent;\n}\n\nbutton:focus {\n  outline: none;\n}\n\nul {\n  display: flex;\n  align-items: center;\n  list-style: none;\n}\n\ninput {\n  outline: unset;\n  border: unset;\n}\n\ninput::placeholder {\n  opacity: 0.6;\n}\n\nfooter {\n  flex: 0 0 auto;\n}\n\nbody {\n  font: 16px/1.5 \"YourFont\", \"Arial\", \"Roboto\", sans-serif;\n}\n\n.header--is-fixed {\n  position: fixed;\n  z-index: 1000;\n  width: 100%;\n}\n\n.header--is-sticky {\n  position: sticky;\n}\n\n.page {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-height: 100vh;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n.u-wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding-right: 0.9375em;\n  padding-left: 0.9375em;\n  width: 100%;\n  max-width: 71.25em;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n.u-wrapper--is-row {\n  flex-direction: row;\n}\n","* {\r\n  box-sizing: border-box;\r\n  padding: 0;\r\n  margin: 0;\r\n  font: inherit;\r\n}\r\n\r\nhtml {\r\n  scroll-behavior: smooth;\r\n}\r\n\r\nmain {\r\n  flex: 1 0 auto;\r\n}\r\n\r\nsection {\r\n  padding-top: em(90, $fz);\r\n  padding-bottom: em(90, $fz);\r\n}\r\n\r\npicture {\r\n  display: inline-block;\r\n  width: 100%;\r\n  line-height: 0;\r\n}\r\n\r\nimg {\r\n  width: 100%;\r\n  height: auto;\r\n  object-fit: cover;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  transition: opacity 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    opacity: 0.6;\r\n  }\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: none;\r\n  background-color: transparent;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n}\r\n\r\nul {\r\n  display: flex;\r\n  align-items: center;\r\n  list-style: none;\r\n}\r\n\r\ninput {\r\n  outline: unset;\r\n  border: unset;\r\n\r\n  &::placeholder {\r\n    opacity: 0.6;\r\n  }\r\n}\r\n\r\nfooter {\r\n  flex: 0 0 auto;\r\n}\r\n\r\nbody {\r\n  font: #{$fz_base}px/1.5 '#{$font}','Arial', 'Roboto', sans-serif;\r\n}\r\n\r\n.header {\r\n  &--is-fixed {\r\n    position: fixed;\r\n    z-index: 1000;\r\n    width: 100%;\r\n  }\r\n\r\n  &--is-sticky {\r\n    position: sticky;\r\n  }\r\n}\r\n\r\n.page {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-height: 100vh;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n}\r\n\r\n.u-wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-right: em(15, $fz);\r\n  padding-left: em(15, $fz);\r\n  width: 100%;\r\n  max-width: em(1140, $fz);\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n\r\n  &--is-row {\r\n    flex-direction: row;\r\n  }\r\n}\r\n","@function strip-units($unit) {\r\n  @return $unit / ($unit * 0 + 1);\r\n}\r\n\r\n@function em($args...) {\r\n  $context: strip-units(nth($args, length($args)));\r\n  $result: ();\r\n  $separator: list_separator($args);\r\n\r\n  @for $i from 1 through length($args) - 1 {\r\n    $value: nth($args, $i);\r\n    @if type-of($value) == 'number' {\r\n      $value: strip-units($value);\r\n      $result: append($result, $value / $context * 1em, $separator);\r\n    } @else if type-of($value) == 'list' {\r\n      $result: append($result, em(append($value, $context)...), $separator);\r\n    } @else {\r\n      $result: append($result, $value, $separator);\r\n    }\r\n  }\r\n\r\n  @return if(length($result) == 1, nth($result, 1), $result);\r\n}\r\n\r\n@function vw($values...) {\r\n  $size: strip-units(nth($values, length($values)));\r\n  $result: ();\r\n  $separator: list_separator($values);\r\n\r\n  @for $i from 1 through length($values) - 1 {\r\n    $value: nth($values, $i);\r\n    @if type-of($value) == 'number' {\r\n      $value: strip-units($value);\r\n      $result: append($result, $value / $size * 100vw, $separator);\r\n    } @else if type-of($value) == 'list' {\r\n      $result: append($result, vw(append($value, $size)...), $separator);\r\n    } @else {\r\n      $result: append($result, $value, $separator);\r\n    }\r\n  }\r\n\r\n  @return if(length($result) == 1, nth($result, 1), $result);\r\n}\r\n"]}